param(
    [parameter(Position=0)]
    [string]$versionNumber,
    [parameter(Position=1)]
    [string]$projectName="Name of project in octopus deploy",
    [parameter(Position=2)]
    [string]$apiKey="API-XXXXXXXXXXXXXXXXXXXXXXXXXX", #generate this from your profile in octopus deploy
    [parameter(Position=3)]
    [string]$packageName="the-name-you-wish-your-package-should-have", #this can be named (alphanumeric) however you like
    [parameter(Position=4)]
    [string]$nugetPackageFolder=".\",
    [parameter(Position=5)]
    [string]$deployToEnvironment="OctopusEnvironmentName"
)
 
$octoCliPath = "c:\path\to\octo.exe"
$octopusUri="http://sewp-deploy01"
if(![System.IO.File]::Exists($octoCliPath)){
    Write-Error "Build agent $env:computername is missing the octopus cli 'octo.exe' at $octoCliPath"
    exit -1
}
$createPackageCommand = "$octoCliPath pack --id=$packageName --basePath=$nugetPackageFolder"
Write-Output $createPackageCommand
iex "cmd /c $createPackageCommand"
 
$packageSearchFilter = "$packageName*"
$packageFile = (Get-ChildItem -Filter $packageSearchFilter)
$packageFileName=$packageFile.Name
 
#turn the filename of the file generated by octo.exe pack into the format --package needs in octo.exe create-release
$packageNameInOctoCreateReleaseFormat = $packageFileName -replace '(.*?)\.(.*)','$1:$2' -replace '.nupkg',''
 
Write-Output "Pushing package and creating a release of package $packageFileName"
 
$pushCommand="$octoCliPath push --package=$packageFileName --server=$octopusUri --apiKey=$apiKey"
Write-Output $pushCommand
iex "cmd /c $pushCommand"
$createReleaseCommand="$octoCliPath create-release --server=$octopusUri --apiKey=$apiKey --package=$packageNameInOctoCreateReleaseFormat --deployto=$deployToEnvironment --project=""$projectName"" --version=$versionNumber"
Write-Output $createReleaseCommand
iex "cmd /c $createReleaseCommand"
remove-item $packageFile